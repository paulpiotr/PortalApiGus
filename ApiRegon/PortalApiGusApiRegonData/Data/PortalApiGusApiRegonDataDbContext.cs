// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using PortalApiGusApiRegonData.Models;
using PortalApiGusApiRegonData.Models.Inny;

//#nullable disable

namespace PortalApiGusApiRegonData.Data
{
    public partial class PortalApiGusApiRegonDataDbContext : DbContext
    {
        public PortalApiGusApiRegonDataDbContext()
        {
        }

        public PortalApiGusApiRegonDataDbContext(DbContextOptions<PortalApiGusApiRegonDataDbContext> options)
            : base(options)
        {
        }

        //public virtual DbSet<TmpTable> TmpTables { get; set; }
        //public virtual DbSet<DaneSzukajPodmiotyParametryWyszukiwania> DaneSzukajPodmiotyParametryWyszukiwania { get; set; }
        //public virtual DbSet<DaneSzukajPodmioty> DaneSzukajPodmioty { get; set; }
        //public virtual DbSet<Inna> Inna { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=(LocalDB)\\MSSQLLocalDB;AttachDbFilename=C:\\Praca\\NetCoreDev\\PortalApiGus\\ApiRegon\\PortalApiGusApiRegonData\\Data\\PortalApiGusApiRegonDataDatabase.mdf;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            //modelBuilder.ApplyConfiguration(new TmpTableConfiguration());
            //OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
